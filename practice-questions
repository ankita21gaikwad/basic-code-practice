// 1.Fibonacci Series : 0,1,1,2,3,5,8,13,21........

let n1 = 0;
let n2 = 1;
console.log(n1);
console.log(n2);
for(let i =1; i<8; i++){
   let n3 = n2+n1;
   console.log(n3);
    n1 = n2; 
    n2 = n3;    
}

// 2 Prime Number : Number should be greater than 1 and divisible by 1 or divisible by itself

function isNumberPrime(num:number):boolean{
    let isNumberPrime: boolean = true;
    if(num>1){
        for(let i= 2; i<num; i++){
            if(num%i === 0){
                isNumberPrime = false;
                console.log(num+ ' is not a prime number'); 
                break;                
            }              
        } 
         if(isNumberPrime){
            console.log(num+ ' is a prime number');
        }
             
    } else{
        console.log(num+ ' is not a prime number');
    }
    return true;
}

isNumberPrime(1);

// 3. Palindrome : A string that reads the same forward or backward

function isPalindrome(word:string): boolean{

// length of the string
 let lengthOfWord: number = word.length;

// reverse the string
let reversedWord:string = reverseString(word,lengthOfWord);

// compare the word and reversedWord
if(word.toLocaleLowerCase() === reversedWord.toLocaleLowerCase()){
    console.log(word + ' is Palindrome');
}else{
    console.log(word + ' is not Palindrome');
}
return true;
}

function reverseString(word:string, lengthOfWord: number): any{
let reversedWord: string = '';
for(let i =0; i<lengthOfWord; i++){
    // extracts each character
    let character = word.charAt(i);
    //adds each character in front of the existing string    
    reversedWord = character+reversedWord;
}
console.log('Reversed word is ' +reversedWord);
return reversedWord;

}

isPalindrome('ankita');

// 4. Factorial: factorial of a number is multiply the number with the factorial value of the previous number
// eg : factorial of 1 is 1
// factorial of 2 is 2*1 = 2

function findFactorial(num:number):number{
    let factorial:number = 1;
    for(let i = 1; i<=num; i++){
        factorial = i*factorial;
    }
    console.log('Factorial of ' +num+ ' is ' +factorial);
    return factorial;
}

findFactorial(7);

// 5. Armstrong Number : Armstrong number is a number that is equal to the sum of cubes of its digits. For example 0, 1, 153, 370, 371 and 407 are the Armstrong numbers.

function isNumberArmstrong(num: number): boolean{
    // get the digits of the number in an Array
    let digitArray: number[] = convertNumberIntoDigitsArray(num);

    // logic to find the Armstrong
    let cubeOfNumber: number = 0;
    for(let i = 0; i<digitArray.length; i++){
        cubeOfNumber = Math.pow(digitArray[i],3) + cubeOfNumber;
    }

    if(num === cubeOfNumber){
        console.log(num+ ' is an Armstrong Number');
    } else{
        console.log(num+ ' is not an Armstrong Number');
    }
    return true;
}

function convertNumberIntoDigitsArray(num: number): number[]{
    let digitArray: number[];
    // convert num into string and split the digits
    let digits: string[] = num.toString().split('');

    // return all the digits into an number array
    return digitArray = digits.map(Number);
    
}

isNumberArmstrong(153);
